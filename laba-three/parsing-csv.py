"""
Ротанов Дмитрий Играрович
Лабораторная №3
Пусть дан файл data.csv, в котором содержится информация в соответствии с вариантом:
Считайте информацию из файла в соответствующую структуру (словарь):
2.1. Выведите информацию об объектах, отсортировав их по одному полю (строковому).
2.2. Выведите информацию об объектах, отсортировав их по одному полю (числовому).
2.3. Выведите информацию, соответствующую какому-либо критерию
(например, для студентов - тех, у кого возраст больше какого-либо значения)
Добавьте к программе возможность сохранения новых данных обратно в файл.
Задание - Студенты: №, ФИО, email, группа
"""

import pandas as pd

def read_csv(config_path):
    """
    Считывает данные из файла CSV в DataFrame
    """
    return pd.read_csv(config_path)

def sort_by_member(data, member, message):
    """
    Сортировка данных csv файла по указанному полю и вывод на экран
    """
    sorted_data = data.sort_values(by=member)
    print(message)
    print(sorted_data)

def main():
    """
    Основная функция программы.
    """
    # Считываем данные из файла CSV в DataFrame
    config_path = '../data/data.csv'
    write_path = '../data/update_data.csv'
    data = read_csv(config_path)
    print("Исходные данные:\n", data)

    # 2.1. Сортировка по строковому полю (ФИО)
    sort_by_member(data, 'ФИО', "\nОтсортированные по ФИО данные:")

    # 2.2. Сортировка по числовому полю (возраст студента)
    sort_by_member(data, 'возраст', '\nОтсортированные по возрасту данные:')

    # 2.3. Фильтрация данных по критерию (возраст студента больше 20 лет)
    criteria_data = data[data['возраст'] > 20]
    print("\nДанные, где возраст студента больше 20 лет:")
    print(criteria_data)

    # Добавьте к программе возможность сохранения новых данных обратно в файл.
    # Для примера сохраню отфильтрованные данные по возрасту
    criteria_data.to_csv('../data/update.csv', index=False)

if __name__ == '__main__':
    main()
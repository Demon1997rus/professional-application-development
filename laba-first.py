"""
Ротанов Дмитрий Играрович
Лабораторная №1, 23 вариант
"""

def bubble_sort(arr):
    """
    Реализация пузырьковой сортировки.
    """
    n = len(arr)
    # Проходим по всем элементам списка
    for i in range(n):
        # Последние i элементов уже отсортированы, поэтому мы можем их игнорировать
        for j in range(0, n - i - 1):
            # Если текущий элемент больше следующего, меняем их местами
            if arr[j] > arr[j + 1]:
                arr[j], arr[j + 1] = arr[j + 1], arr[j]


def input_list():
    """
    Функция для ввода элементов списка с клавиатуры.
    """
    try:
        n = int(input("Введите количество элементов списка: "))
        arr = []
        for i in range(n):
            arr.append(int(input(f"Введите элемент {i + 1}: ")))
        return arr
    except ValueError:
        print("Ошибка: Введите целое число.")


def generate_list(size):
    """
    Функция для автоматической генерации элементов списка.
    """
    import random
    return [random.randint(1, 100) for _ in range(size)]


def main():
    """
    Основная функция программы.
    """
    print("1. Ввод элементов списка с клавиатуры")
    print("2. Автоматическая генерация элементов списка")
    choice = input("Выберите способ ввода (1/2): ")
    arr = []
    if choice == '1':
        arr = input_list()
    elif choice == '2':
        try:
            size = int(input("Введите размер списка: "))
            arr = generate_list(size)
        except ValueError:
            print("Ошибка: Введите целое число.")
    else:
        print("Ошибка: Некорректный выбор.")
        return

    print("Исходный список:", arr)
    bubble_sort(arr)
    print("Отсортированный список:", arr)


if __name__ == "__main__":
    main()

# P.S. - в Python нету стандартной функции сортировки пузырьком.
# Есть только list.sort() и sorted, которые реализованы на основе эффективных алгоритмов сортировки,
# таких как быстрая сортировка (quicksort),
# сортировка слиянием (mergesort) или
# Timsort (эффективный гибридный алгоритм, основанный на сортировке слиянием и вставками).
